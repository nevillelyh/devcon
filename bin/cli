#!/bin/bash

set -euo pipefail

bindir="$(dirname "$(readlink -f "$0")")"
basedir="$(readlink -f "$bindir/..")"
project="$(basename "$basedir")"
net="${project}_default"
ts=$(date "+%Y%m%d%H%M%S")

run_cockroach() {
    tag="cockroachdb/cockroach"
    docker run -it --rm --name "cockroach-$ts" --network "$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        "$tag" \
        sql --insecure --host cockroach1.devcon.io "$@"
}

run_cqlsh() {
    tag="scylladb/scylla"
    docker run -it --rm --name "cqlsh-$ts" --network "$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        --entrypoint /bin/bash \
        "$tag" \
        cqlsh scylla.devcon.io "$@"
}

run_kcat() {
    tag="edenhill/kcat:1.7.1"
    docker run -it --rm --name "kcat-$ts" --network=devcon_default \
        "$tag" \
        -b cp-broker.devcon.io:29092 \
        -r http://cp-schema-registry.devcon.io:8081 \
        "$@"
}

run_mc() {
    tag="minio/mc:latest"
    docker run -it --rm --name "mc-$ts" --network="$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        "$tag" \
        "$@"
}

run_mariadb() {
    tag="mariadb:latest"
    docker run -it --rm --name "mariadb-$ts" --network "$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        "$tag" \
        mariadb --host="mariadb.devcon.io" \
        --user=root --password=mariadbpass \
        "$@"
}

run_mongosh() {
    tag="mongo:latest"
    docker run -it --rm --name "mongo-$ts" --network "$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        "$tag" \
        mongosh --host="mongo.devcon.io" \
        --username mongo --password mongopass \
        "$@"
}

run_mysql() {
    tag="mysql:latest"
    docker run -it --rm --name "mysql-$ts" --network "$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        "$tag" \
        mysql --host="mysql.devcon.io" \
        --user=root --password=mysqlpass \
        "$@"
}

run_psql() {
    tag="postgres:latest"
    docker run -it --rm --name "postgres-$ts" --network "$net" \
        --user "$(id -u)" \
        --env HOME=/home/devcon \
        --env PGPASSWORD=postgrespass \
        --workdir /home/devcon \
        --volume "$basedir/home:/home/devcon:rw" \
        "$tag" \
        psql --host="postgres.devcon.io" \
        --user=postgres \
        "$@"
}

run_trino() {
    tag="trinodb/trino:latest"
    docker run -it --rm --name "trino-$ts" --network "$net" \
        --volume "$basedir/home:/home/trino:rw" \
        "$tag" \
        trino --server="http://trino.devcon.io:8080" \
        "$@"
}

cli="$(basename "$0")"

contains() {
    cli="$1"
    # Bash 3 on Mac missing readarray
    # shellcheck disable=SC2207
    clis=($(grep -o "^run_.\+()" "$(readlink -f "$0")" | sed "s/^run_\(.*\)()$/\1/"))
    shift
    for c in "${clis[@]}"; do
        [[ "$c" == "$cli" ]] && return 0
    done
    return 1
}

if ! contains "$cli"; then
    echo "Unknown CLI: $cli"
    echo "    Available CLIs:"
    for c in "${clis[@]}"; do
        echo "        $c"
    done
    exit 1
fi

"run_$cli" "$@"
