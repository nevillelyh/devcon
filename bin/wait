#!/bin/bash

set -euo pipefail

bindir="$(dirname "$(readlink -f "$0")")"
basedir="$(readlink -f "$bindir/..")"
project="$(basename "$basedir")"

wait_for_exit() {
    status=""
    container=$1
    echo "[INFO] Waiting for container $container"
    while [[ "$status" != "exited" ]]; do
        sleep 1
        status=$(docker inspect --format="{{.State.Status}}" "$container")
    done
    code=$(docker inspect --format="{{.State.ExitCode}}" "$container")
    if [[ "$code" -eq 0 ]]; then
        echo "[INFO] Container $container exited with code 0"
    else
        echo "[FAIL] Container $container exited with code $code"
        echo "============================================================"
        docker logs "$container"
        echo "============================================================"
        exit 1
    fi
}

wait_for_log() {
    container=$1
    expected=$2
    count=$3
    echo "[INFO] Waiting for container $container"
    while [[ ! $(docker logs "$container" 2>&1 | grep -c "$expected") -eq "$count" ]]; do
        sleep 1
    done
    echo "[INFO] Container $container is up"
}

if [[ $# -eq 0 ]]; then
    echo "Usage: $(basename "$0") <SERVICE>.."
    exit 1
fi

for service in "$@"; do
    case "$service" in
        metastore-hive|metastore-iceberg)
            wait_for_log "$project-$service-1" "Starting Hive Metastore Server" 1
            ;;
        cockroach|minio|mysql|postgres|scylla)
            wait_for_exit "$project-$service-init-1"
            ;;
        kafka)
            echo '[INFO] Waiting for Kafka topic "users"'
            while [[ "$("$bindir/kcat" -L | grep -c 'topic "users"')" -ne 1 ]]; do
                sleep 1
            done
            echo '[INFO] Kafka topic "users" is available'
            ;;
        mariadb)
            wait_for_log "$project-$service-1" "mariadbd: ready for connections." 2
            ;;
        mongo)
            wait_for_log "$project-$service-1" '"ctx":"listener","msg":"Listening on","attr":{"address":"0.0.0.0"}' 1
            ;;
        trino)
            wait_for_log "$project-$service-1" "======== SERVER STARTED ========" 1
            ;;
        *)
            echo "Unknown service: $service"
            ;;
    esac
done
